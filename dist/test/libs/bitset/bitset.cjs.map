{"version":3,"file":"bitset.cjs","sources":["../../../../src/libs/bitset/bitset.ts"],"sourcesContent":["export class Bitset {\n  readonly class = Bitset\n\n  constructor(\n    public value: number,\n    public length: number\n  ) { }\n\n  unsigned() {\n    return this.value >>> 0\n  }\n\n  get(index: number) {\n    if (index < 0)\n      throw new Error(`Index is negative`)\n    if (index > this.length)\n      throw new Error(`Index is too big`)\n\n    return (this.value & (1 << index)) !== 0\n  }\n\n  toggle(index: number) {\n    if (index < 0)\n      throw new Error(`Index is negative`)\n    if (index > this.length)\n      throw new Error(`Index is too big`)\n\n    this.value ^= (1 << index)\n\n    return this\n  }\n\n  enable(index: number) {\n    if (index < 0)\n      throw new Error(`Index is negative`)\n    if (index > this.length)\n      throw new Error(`Index is too big`)\n\n    this.value |= (1 << index)\n\n    return this\n  }\n\n  disable(index: number) {\n    if (index < 0)\n      throw new Error(`Index is negative`)\n    if (index > this.length)\n      throw new Error(`Index is too big`)\n\n    this.value &= ~(1 << index)\n\n    return this\n  }\n\n  set(index: number, value: boolean) {\n    if (value)\n      return this.enable(index)\n    else\n      return this.disable(index)\n  }\n\n  first(count: number) {\n    if (count < 0)\n      throw new Error(`Count is negative`)\n    if (count > this.length)\n      throw new Error(`Count is too big`)\n\n    return this.value >> (this.length - count)\n  }\n\n  last(count: number) {\n    if (count < 0)\n      throw new Error(`Count is negative`)\n    if (count > this.length)\n      throw new Error(`Count is too big`)\n\n    return this.value & ((1 << count) - 1)\n  }\n}"],"names":[],"mappings":"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"}