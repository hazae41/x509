{"version":3,"file":"bitmask.test.cjs","sources":["../../../../src/libs/bitmask/bitmask.test.ts"],"sourcesContent":["import { test } from 'uvu';\nimport * as assert from 'uvu/assert';\nimport { Bitmask } from \"./bitmask.js\";\n\nfunction format(bitmask: Bitmask, digits: number) {\n  let s = bitmask.export().toString(2)\n  while (s.length < digits) s = \"0\" + s\n  return s\n}\n\ntest(\"Identity\", async () => {\n  const bitmask = new Bitmask(0b00000000)\n\n  assert.is(bitmask.get(1), false)\n  assert.is(format(bitmask, 8), \"00000000\")\n})\n\ntest(\"Enable then disable\", async () => {\n  const bitmask = new Bitmask(0b00000000)\n\n  bitmask.enable(1)\n  assert.is(bitmask.get(1), true)\n  assert.is(format(bitmask, 8), \"00000010\")\n\n  bitmask.disable(1)\n  assert.is(bitmask.get(1), false)\n  assert.is(format(bitmask, 8), \"00000000\")\n})\n\ntest(\"Toggle then toggle\", async () => {\n  const bitmask = new Bitmask(0b00000000)\n\n  bitmask.toggle(1)\n  assert.is(bitmask.get(1), true)\n  assert.is(format(bitmask, 8), \"00000010\")\n\n  bitmask.toggle(1)\n  assert.is(bitmask.get(1), false)\n  assert.is(format(bitmask, 8), \"00000000\")\n})\n\ntest(\"Export Int32 to Uint32\", async () => {\n  const bitmask = new Bitmask(Date.now())\n\n  const n0 = bitmask.n\n  const e0 = bitmask.export()\n\n  bitmask.toggle(32)\n\n  const n1 = bitmask.n\n  const e1 = bitmask.export()\n\n  assert.ok(n0 > 0)\n  assert.ok(n1 < 0)\n\n  assert.ok(e0 > 0)\n  assert.ok(e1 > 0)\n\n  const buffer = Buffer.from([0, 0, 0, 0])\n  assert.throws(() => buffer.writeUInt32BE(bitmask.n, 0))\n  assert.not.throws(() => buffer.writeUInt32BE(bitmask.export(), 0))\n})\n\ntest.run()"],"names":["test","__awaiter","bitmask","Bitmask","assert"],"mappings":"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"}