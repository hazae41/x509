{"version":3,"file":"binary.test.cjs","sources":["../../../../src/libs/binary/binary.test.ts"],"sourcesContent":["import { test } from 'uvu';\nimport * as assert from 'uvu/assert';\nimport { Binary } from \"./binary.js\";\n\ntest(\"Allocation\", async () => {\n  for (let i = 0; i < 32; i++) {\n    const binary = Binary.alloc(i)\n    assert.is(binary.buffer.length, i)\n    assert.is(binary.offset, 0)\n  }\n\n  for (let i = 0; i < 32; i++) {\n    const binary = Binary.allocUnsafe(i)\n    assert.is(binary.buffer.length, i)\n    assert.is(binary.offset, 0)\n  }\n})\n\ntest(\"write then read\", async () => {\n  const buffer = Buffer.from([1, 2, 3, 4])\n  const binary = Binary.allocUnsafe(buffer.length)\n\n  binary.write(buffer)\n  assert.is(binary.offset, buffer.length)\n  assert.ok(binary.buffer.equals(buffer))\n\n  binary.offset = 0\n\n  const buffer2 = binary.read(buffer.length)\n  assert.is(binary.offset, buffer.length)\n  assert.ok(binary.buffer.equals(buffer2))\n\n  assert.is(buffer.length, buffer2.length)\n  assert.ok(buffer.equals(buffer2))\n})\n\ntest(\"writeUint8 then readUint8\", async () => {\n  const binary = Binary.allocUnsafe(1)\n\n  const n = 42\n\n  binary.writeUint8(n)\n  assert.is(binary.offset, 1)\n  assert.is(binary.buffer.length, 1)\n  assert.ok(binary.buffer.equals(Buffer.from([n])))\n\n  binary.offset = 0\n\n  const n2 = binary.readUint8()\n  assert.is(binary.offset, 1)\n  assert.is(binary.buffer.length, 1)\n  assert.ok(binary.buffer.equals(Buffer.from([n])))\n\n  assert.is(n, n2)\n\n  binary.offset = 0\n\n  assert.throws(() => binary.writeUint8(2 ** 8))\n  assert.throws(() => binary.writeUint8(-1))\n})\n\ntest(\"writeUint16 then readUint16\", async () => {\n  const binary = Binary.allocUnsafe(2)\n\n  const n = 42\n\n  binary.writeUint16(n)\n  assert.is(binary.offset, 2)\n  assert.is(binary.buffer.length, 2)\n\n  binary.offset = 0\n\n  const n2 = binary.readUint16()\n  assert.is(binary.offset, 2)\n  assert.is(binary.buffer.length, 2)\n\n  assert.is(n, n2)\n\n  binary.offset = 0\n\n  assert.throws(() => binary.writeUint16(2 ** 16))\n  assert.throws(() => binary.writeUint16(-1))\n})\n\ntest(\"writeUint24 then readUint24\", async () => {\n  const binary = Binary.allocUnsafe(3)\n\n  const n = 42\n\n  binary.writeUint24(n)\n  assert.is(binary.offset, 3)\n  assert.is(binary.buffer.length, 3)\n\n  binary.offset = 0\n\n  const n2 = binary.readUint24()\n  assert.is(binary.offset, 3)\n  assert.is(binary.buffer.length, 3)\n\n  assert.is(n, n2)\n\n  binary.offset = 0\n\n  assert.throws(() => binary.writeUint16(2 ** 24))\n  assert.throws(() => binary.writeUint16(-1))\n})\n\ntest(\"writeUint32 then readUint32\", async () => {\n  const binary = Binary.allocUnsafe(4)\n\n  const n = 42\n\n  binary.writeUint32(n)\n  assert.is(binary.offset, 4)\n  assert.is(binary.buffer.length, 4)\n\n  binary.offset = 0\n\n  const n2 = binary.readUint32()\n  assert.is(binary.offset, 4)\n  assert.is(binary.buffer.length, 4)\n\n  assert.is(n, n2)\n\n  binary.offset = 0\n\n  assert.throws(() => binary.writeUint16(2 ** 32))\n  assert.throws(() => binary.writeUint16(-1))\n})\n\ntest.run()"],"names":["test","__awaiter","binary","Binary","assert"],"mappings":"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"}