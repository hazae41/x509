{"version":3,"file":"binary.test.cjs","sources":["../../../../src/libs/binary/binary.test.ts"],"sourcesContent":["import { assert, throws } from \"libs/assert/assert.js\";\nimport { Binary } from \"libs/binary/binary.js\";\nimport { relative, resolve } from \"node:path\";\nimport { test } from \"uvu\";\n\ntest.before(async () => {\n  const directory = resolve(\"./dist/test/\")\n  const { pathname } = new URL(import.meta.url)\n  console.log(relative(directory, pathname))\n})\n\ntest(\"Allocation\", async () => {\n  for (let i = 0; i < 32; i++) {\n    const binary = Binary.alloc(i)\n    assert(binary.buffer.length === i)\n    assert(binary.offset === 0)\n  }\n\n  for (let i = 0; i < 32; i++) {\n    const binary = Binary.allocUnsafe(i)\n    assert(binary.buffer.length === i)\n    assert(binary.offset === 0)\n  }\n})\n\ntest(\"write then read\", async () => {\n  const buffer = Buffer.from([1, 2, 3, 4])\n  const binary = Binary.allocUnsafe(buffer.length)\n\n  binary.write(buffer)\n  assert(binary.offset === buffer.length)\n  assert(binary.buffer.equals(buffer))\n\n  binary.offset = 0\n\n  const buffer2 = binary.read(buffer.length)\n  assert(binary.offset === buffer.length)\n  assert(binary.buffer.equals(buffer2))\n\n  assert(buffer.length === buffer2.length)\n  assert(buffer.equals(buffer2))\n})\n\ntest(\"writeUint8 then readUint8\", async () => {\n  const binary = Binary.allocUnsafe(1)\n\n  const n = 42\n\n  binary.writeUint8(n)\n  assert(binary.offset === 1)\n  assert(binary.buffer.length === 1)\n  assert(binary.buffer.equals(Buffer.from([n])))\n\n  binary.offset = 0\n\n  const n2 = binary.readUint8()\n  assert(binary.offset === 1)\n  assert(binary.buffer.length === 1)\n  assert(binary.buffer.equals(Buffer.from([n])))\n\n  assert(n === n2)\n\n  binary.offset = 0\n\n  assert(throws(() => binary.writeUint8(2 ** 8)))\n  assert(throws(() => binary.writeUint8(-1)))\n})\n\ntest(\"writeUint16 then readUint16\", async () => {\n  const binary = Binary.allocUnsafe(2)\n\n  const n = 42\n\n  binary.writeUint16(n)\n  assert(binary.offset === 2)\n  assert(binary.buffer.length === 2)\n\n  binary.offset = 0\n\n  const n2 = binary.readUint16()\n  assert(binary.offset === 2)\n  assert(binary.buffer.length === 2)\n\n  assert(n === n2)\n\n  binary.offset = 0\n\n  assert(throws(() => binary.writeUint16(2 ** 16)))\n  assert(throws(() => binary.writeUint16(-1)))\n})\n\ntest(\"writeUint24 then readUint24\", async () => {\n  const binary = Binary.allocUnsafe(3)\n\n  const n = 42\n\n  binary.writeUint24(n)\n  assert(binary.offset === 3)\n  assert(binary.buffer.length === 3)\n\n  binary.offset = 0\n\n  const n2 = binary.readUint24()\n  assert(binary.offset === 3)\n  assert(binary.buffer.length === 3)\n\n  assert(n === n2)\n\n  binary.offset = 0\n\n  assert(throws(() => binary.writeUint16(2 ** 24)))\n  assert(throws(() => binary.writeUint16(-1)))\n})\n\ntest(\"writeUint32 then readUint32\", async () => {\n  const binary = Binary.allocUnsafe(4)\n\n  const n = 42\n\n  binary.writeUint32(n)\n  assert(binary.offset === 4)\n  assert(binary.buffer.length === 4)\n\n  binary.offset = 0\n\n  const n2 = binary.readUint32()\n  assert(binary.offset === 4)\n  assert(binary.buffer.length === 4)\n\n  assert(n === n2)\n\n  binary.offset = 0\n\n  assert(throws(() => binary.writeUint16(2 ** 32)))\n  assert(throws(() => binary.writeUint16(-1)))\n})\n\ntest.run()"],"names":["test","__awaiter","resolve","relative","binary","Binary","assert","throws"],"mappings":"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"}