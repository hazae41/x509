{"version":3,"file":"algorithm.cjs","sources":["../../../../../src/mods/x509/algorithm/algorithm.ts"],"sourcesContent":["import { Binary } from \"libs/binary/binary.js\"\nimport { Length } from \"mods/asn1/length/length.js\"\nimport { Type } from \"mods/asn1/type/type.js\"\n\nexport class AlgorithmIdentifier {\n  readonly class = AlgorithmIdentifier\n\n  static type = new Type(Type.clazzes.universal, true, Type.tags.sequence)\n\n  constructor(\n    readonly algorith: Buffer\n  ) { }\n\n  static read(binary: Binary) {\n    const type = Type.fromDER(binary)\n\n    if (!this.type.equals(type))\n      throw new Error(`Invalid type`)\n\n    const length = Length.fromDER(binary)\n\n    binary.offset += length.value\n\n    return new this(Buffer.from([0]))\n  }\n}"],"names":["type","Type","length","Length"],"mappings":";;;;;MAIa,mBAAmB,CAAA;AAK9B,IAAA,WAAA,CACW,QAAgB,EAAA;QAAhB,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAQ;QALlB,IAAK,CAAA,KAAA,GAAG,mBAAmB,CAAA;KAM/B;IAEL,OAAO,IAAI,CAAC,MAAc,EAAA;QACxB,MAAMA,MAAI,GAAGC,SAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;QAEjC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAACD,MAAI,CAAC;AACzB,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,YAAA,CAAc,CAAC,CAAA;QAEjC,MAAME,QAAM,GAAGC,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;AAErC,QAAA,MAAM,CAAC,MAAM,IAAID,QAAM,CAAC,KAAK,CAAA;AAE7B,QAAA,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;KAClC;;AAjBM,mBAAA,CAAA,IAAI,GAAG,IAAID,SAAI,CAACA,SAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAEA,SAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;;;;"}