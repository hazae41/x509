{"version":3,"file":"pem.test.cjs","sources":["../../../../../src/mods/x509/pem/pem.test.ts"],"sourcesContent":["import { assert } from \"libs/assert/assert.js\";\nimport { PEM } from \"mods/x509/pem/pem.js\";\nimport { readFile } from \"node:fs/promises\";\nimport { relative, resolve } from \"node:path\";\nimport { test } from \"uvu\";\n\ntest.before(async () => {\n  const directory = resolve(\"./dist/test/\")\n  const { pathname } = new URL(import.meta.url)\n  console.log(relative(directory, pathname.replace(\".cjs\", \".ts\")))\n})\n\nfunction ignoreLastNewline(text: string) {\n  if (text.endsWith(\"\\n\"))\n    return text.slice(0, -1)\n  return text\n}\n\ntest(\"Parse and stringify\", async () => {\n  const text = await readFile(\"./test/cert.pem\", \"utf8\")\n  const buffer = PEM.parse(text)\n  const text2 = PEM.stringify(buffer)\n\n  assert(ignoreLastNewline(text) === ignoreLastNewline(text2))\n})\n\ntest.run()"],"names":["test","__awaiter","resolve","relative","readFile","PEM","assert"],"mappings":";;;;;;;;;AAMAA,QAAI,CAAC,MAAM,CAAC,MAAWC,eAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACrB,IAAA,MAAM,SAAS,GAAGC,iBAAO,CAAC,cAAc,CAAC,CAAA;AACzC,IAAA,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,GAAG,CAAC,qNAAe,CAAC,CAAA;AAC7C,IAAA,OAAO,CAAC,GAAG,CAACC,kBAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAA;AACnE,CAAC,CAAA,CAAC,CAAA;AAEF,SAAS,iBAAiB,CAAC,IAAY,EAAA;AACrC,IAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;QACrB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;AAC1B,IAAA,OAAO,IAAI,CAAA;AACb,CAAC;AAEDH,QAAI,CAAC,qBAAqB,EAAE,MAAWC,eAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;IACrC,MAAM,IAAI,GAAG,MAAMG,iBAAQ,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAA;IACtD,MAAM,MAAM,GAAGC,OAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IAC9B,MAAM,KAAK,GAAGA,OAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;IAEnCC,aAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAA;AAC9D,CAAC,CAAA,CAAC,CAAA;AAEFN,QAAI,CAAC,GAAG,EAAE;;"}