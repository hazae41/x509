{"version":3,"file":"tbscertificate.cjs","sources":["../../../../src/mods/certificate/tbscertificate.ts"],"sourcesContent":["import { Binary } from \"libs/binary/binary.js\";\nimport { Integer } from \"mods/asn1/integer/integer.js\";\nimport { Length } from \"mods/asn1/length/length.js\";\nimport { Type } from \"mods/asn1/type/type.js\";\n\nexport class TBSCertificate {\n  readonly class = TBSCertificate\n\n  static type = new Type(Type.clazzes.universal, true, Type.tags.sequence)\n\n  constructor(\n    readonly version = new TBSCertificateVersion()\n  ) { }\n\n  static read(binary: Binary) {\n    const type = Type.read(binary)\n\n    if (!this.type.equals(type))\n      throw new Error(`Invalid type`)\n\n    const length = Length.read(binary)\n    const content = binary.offset\n\n    const version = TBSCertificateVersion.read(binary)\n\n    return new this(version)\n  }\n}\n\nclass TBSCertificateVersion {\n  readonly class = TBSCertificateVersion\n\n  static type = new Type(Type.clazzes.context, true, 0)\n\n  constructor(\n    readonly inner = new Integer(1)\n  ) { }\n\n  static read(binary: Binary) {\n    const start = binary.offset\n\n    const type = Type.read(binary)\n\n    if (!this.type.equals(type)) {\n      binary.offset = start\n      return new this()\n    }\n\n    const length = Length.read(binary)\n    const content = binary.offset\n\n    const inner = Integer.read(binary)\n\n    if (binary.offset - content !== length.value)\n      throw new Error(`Invalid length`)\n\n    return new this(inner)\n  }\n}\n"],"names":["type","Type","Length","Integer","length"],"mappings":";;;;;;MAKa,cAAc,CAAA;IAKzB,WACW,CAAA,OAAA,GAAU,IAAI,qBAAqB,EAAE,EAAA;QAArC,IAAO,CAAA,OAAA,GAAP,OAAO,CAA8B;QALvC,IAAK,CAAA,KAAA,GAAG,cAAc,CAAA;KAM1B;IAEL,OAAO,IAAI,CAAC,MAAc,EAAA;QACxB,MAAMA,MAAI,GAAGC,SAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAE9B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAACD,MAAI,CAAC;AACzB,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,YAAA,CAAc,CAAC,CAAA;QAElBE,aAAM,CAAC,IAAI,CAAC,MAAM,EAAC;AAClC,QAAgB,MAAM,CAAC,OAAM;QAE7B,MAAM,OAAO,GAAG,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;AAElD,QAAA,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,CAAA;KACzB;;AAlBM,cAAA,CAAA,IAAI,GAAG,IAAID,SAAI,CAACA,SAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,EAAEA,SAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;AAqB1E,MAAM,qBAAqB,CAAA;AAKzB,IAAA,WAAA,CACW,KAAQ,GAAA,IAAIE,eAAO,CAAC,CAAC,CAAC,EAAA;QAAtB,IAAK,CAAA,KAAA,GAAL,KAAK,CAAiB;QALxB,IAAK,CAAA,KAAA,GAAG,qBAAqB,CAAA;KAMjC;IAEL,OAAO,IAAI,CAAC,MAAc,EAAA;AACxB,QAAA,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAA;QAE3B,MAAMH,MAAI,GAAGC,SAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAE9B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAACD,MAAI,CAAC,EAAE;AAC3B,YAAA,MAAM,CAAC,MAAM,GAAG,KAAK,CAAA;YACrB,OAAO,IAAI,IAAI,EAAE,CAAA;AAClB,SAAA;QAED,MAAMI,QAAM,GAAGF,aAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;AAClC,QAAA,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAA;QAE7B,MAAM,KAAK,GAAGC,eAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAElC,IAAI,MAAM,CAAC,MAAM,GAAG,OAAO,KAAKC,QAAM,CAAC,KAAK;AAC1C,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,cAAA,CAAgB,CAAC,CAAA;AAEnC,QAAA,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,CAAA;KACvB;;AAzBM,qBAAA,CAAA,IAAI,GAAG,IAAIH,SAAI,CAACA,SAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;;;;"}