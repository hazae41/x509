{"version":3,"file":"type.test.cjs","sources":["../../../../../src/mods/asn1/type/type.test.ts"],"sourcesContent":["import { assert } from \"libs/assert/assert.js\";\nimport { Binary } from \"libs/binary/binary.js\";\nimport { Type } from \"mods/asn1/type/type.js\";\nimport { Certificate } from \"mods/certificate/certificate.js\";\nimport { PEM } from \"mods/pem/pem.js\";\nimport { readFile } from \"node:fs/promises\";\nimport { relative, resolve } from \"node:path\";\nimport { test } from \"uvu\";\n\ntest.before(async () => {\n  const directory = resolve(\"./dist/test/\")\n  const { pathname } = new URL(import.meta.url)\n  console.log(relative(directory, pathname.replace(\".cjs\", \".ts\")))\n})\n\ntest(\"Read\", async () => {\n  const text = await readFile(\"./test/cert.pem\", \"utf8\")\n  const type = Type.read(new Binary(PEM.parse(text)))\n  assert(type.equals(Certificate.type))\n})\n\ntest.run()"],"names":["test","__awaiter","resolve","relative","readFile","type","Type","Binary","PEM","assert","Certificate"],"mappings":";;;;;;;;;;;;AASAA,QAAI,CAAC,MAAM,CAAC,MAAWC,eAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACrB,IAAA,MAAM,SAAS,GAAGC,iBAAO,CAAC,cAAc,CAAC,CAAA;AACzC,IAAA,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,GAAG,CAAC,uNAAe,CAAC,CAAA;AAC7C,IAAA,OAAO,CAAC,GAAG,CAACC,kBAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAA;AACnE,CAAC,CAAA,CAAC,CAAA;AAEFH,QAAI,CAAC,MAAM,EAAE,MAAWC,eAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;IACtB,MAAM,IAAI,GAAG,MAAMG,iBAAQ,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAA;AACtD,IAAA,MAAMC,MAAI,GAAGC,SAAI,CAAC,IAAI,CAAC,IAAIC,aAAM,CAACC,OAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACnDC,aAAM,CAACJ,MAAI,CAAC,MAAM,CAACK,uBAAW,CAAC,IAAI,CAAC,CAAC,CAAA;AACvC,CAAC,CAAA,CAAC,CAAA;AAEFV,QAAI,CAAC,GAAG,EAAE;;"}