{"version":3,"file":"integer.test.cjs","sources":["../../../../../src/mods/asn1/integer/integer.test.ts"],"sourcesContent":["import { assert } from \"libs/assert/assert.js\";\nimport { Binary } from \"libs/binary/binary.js\";\nimport { Integer } from \"mods/asn1/integer/integer.js\";\nimport { relative, resolve } from \"node:path\";\nimport { test } from \"uvu\";\n\ntest.before(async () => {\n  const directory = resolve(\"./dist/test/\")\n  const { pathname } = new URL(import.meta.url)\n  console.log(relative(directory, pathname.replace(\".cjs\", \".ts\")))\n})\n\nfunction hexToInteger(hex: string) {\n  const buffer = Buffer.from(hex.replaceAll(\" \", \"\"), \"hex\")\n  return Integer.read(new Binary(buffer)).value\n}\n\ntest(\"Read\", async () => {\n  assert(hexToInteger(\"02 01 00\") === BigInt(0))\n  assert(hexToInteger(\"02 02 30 39\") === BigInt(12345))\n  assert(hexToInteger(\"02 12 03 D4 15 31 8E 2C 57 1D 29  05 FC 3E 05 27 68 9D 0D 09\") === BigInt(\"333504890676592408951587385614406537514249\"))\n})\n\ntest.run()\n"],"names":["test","__awaiter","resolve","relative","Integer","Binary","assert"],"mappings":";;;;;;;;;AAMAA,QAAI,CAAC,MAAM,CAAC,MAAWC,eAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACrB,IAAA,MAAM,SAAS,GAAGC,iBAAO,CAAC,cAAc,CAAC,CAAA;AACzC,IAAA,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,GAAG,CAAC,6NAAe,CAAC,CAAA;AAC7C,IAAA,OAAO,CAAC,GAAG,CAACC,kBAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAA;AACnE,CAAC,CAAA,CAAC,CAAA;AAEF,SAAS,YAAY,CAAC,GAAW,EAAA;AAC/B,IAAA,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAA;AAC1D,IAAA,OAAOC,eAAO,CAAC,IAAI,CAAC,IAAIC,aAAM,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAA;AAC/C,CAAC;AAEDL,QAAI,CAAC,MAAM,EAAE,MAAWC,eAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;IACtBK,aAAM,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;IAC9CA,aAAM,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;IACrDA,aAAM,CAAC,YAAY,CAAC,8DAA8D,CAAC,KAAK,MAAM,CAAC,4CAA4C,CAAC,CAAC,CAAA;AAC/I,CAAC,CAAA,CAAC,CAAA;AAEFN,QAAI,CAAC,GAAG,EAAE;;"}