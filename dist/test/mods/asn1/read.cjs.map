{"version":3,"file":"read.cjs","sources":["../../../../src/mods/asn1/read.ts"],"sourcesContent":["import { Binary } from \"libs/binary/binary.js\";\nimport { Integer } from \"mods/asn1/integer/integer.js\";\nimport { Length } from \"mods/asn1/length/length.js\";\nimport { ASN1 } from \"mods/asn1/object.js\";\nimport { Sequence } from \"mods/asn1/sequence/sequence.js\";\nimport { Type } from \"mods/asn1/type/type.js\";\nimport { Unknown } from \"mods/asn1/unknown/unknown.js\";\n\nexport function read(binary: Binary): ASN1 {\n  const start = binary.offset\n\n  const type = Type.read(binary)\n  const length = Length.read(binary)\n\n  const content = binary.offset\n  binary.offset = start\n\n  if (type.equals(Sequence.type))\n    return Sequence.read(binary, read)\n  if (type.equals(Integer.type))\n    return Integer.read(binary)\n\n  binary.offset = content\n  binary.offset += length.value\n\n  return new Unknown(type)\n}"],"names":["type","Type","length","Length","Sequence","Integer","Unknown"],"mappings":";;;;;;;;AAQM,SAAU,IAAI,CAAC,MAAc,EAAA;AACjC,IAAA,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAA;IAE3B,MAAMA,MAAI,GAAGC,SAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IAC9B,MAAMC,QAAM,GAAGC,aAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;AAElC,IAAA,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAA;AAC7B,IAAA,MAAM,CAAC,MAAM,GAAG,KAAK,CAAA;AAErB,IAAA,IAAIH,MAAI,CAAC,MAAM,CAACI,iBAAQ,CAAC,IAAI,CAAC;QAC5B,OAAOA,iBAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;AACpC,IAAA,IAAIJ,MAAI,CAAC,MAAM,CAACK,eAAO,CAAC,IAAI,CAAC;AAC3B,QAAA,OAAOA,eAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;AAE7B,IAAA,MAAM,CAAC,MAAM,GAAG,OAAO,CAAA;AACvB,IAAA,MAAM,CAAC,MAAM,IAAIH,QAAM,CAAC,KAAK,CAAA;AAE7B,IAAA,OAAO,IAAII,eAAO,CAACN,MAAI,CAAC,CAAA;AAC1B;;;;"}