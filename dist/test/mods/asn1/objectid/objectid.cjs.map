{"version":3,"file":"objectid.cjs","sources":["../../../../../src/mods/asn1/objectid/objectid.ts"],"sourcesContent":["import { Binary } from \"libs/binary/binary.js\"\nimport { Length } from \"mods/asn1/length/length.js\"\nimport { Type } from \"mods/asn1/type/type.js\"\n\nexport class ObjectID {\n  readonly class = ObjectID\n\n  static type = new Type(Type.clazzes.universal, false, Type.tags.OBJECT_IDENTIFIER)\n\n  constructor(\n    readonly buffer: Buffer\n  ) { }\n\n  get type() {\n    return this.class.type\n  }\n\n  toString() {\n    return `OBJECT IDENTIFIER ${this.buffer.toString(\"hex\")}`\n  }\n\n  static fromDER(binary: Binary) {\n    const type = Type.fromDER(binary)\n\n    if (!this.type.equals(type))\n      throw new Error(`Invalid type`)\n\n    const length = Length.fromDER(binary)\n    const content = binary.offset\n\n    const buffer = binary.read(length.value)\n\n    if (binary.offset - content !== length.value)\n      throw new Error(`Invalid length`)\n\n    return new this(buffer)\n  }\n}"],"names":["type","Type","length","Length"],"mappings":";;;;;MAIa,QAAQ,CAAA;AAKnB,IAAA,WAAA,CACW,MAAc,EAAA;QAAd,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QALhB,IAAK,CAAA,KAAA,GAAG,QAAQ,CAAA;KAMpB;AAEL,IAAA,IAAI,IAAI,GAAA;AACN,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAA;KACvB;IAED,QAAQ,GAAA;QACN,OAAO,CAAA,kBAAA,EAAqB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA,CAAE,CAAA;KAC1D;IAED,OAAO,OAAO,CAAC,MAAc,EAAA;QAC3B,MAAMA,MAAI,GAAGC,SAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;QAEjC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAACD,MAAI,CAAC;AACzB,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,YAAA,CAAc,CAAC,CAAA;QAEjC,MAAME,QAAM,GAAGC,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;AACrC,QAAA,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAA;QAE7B,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAACD,QAAM,CAAC,KAAK,CAAC,CAAA;QAExC,IAAI,MAAM,CAAC,MAAM,GAAG,OAAO,KAAKA,QAAM,CAAC,KAAK;AAC1C,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,cAAA,CAAgB,CAAC,CAAA;AAEnC,QAAA,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,CAAA;KACxB;;AA7BM,QAAA,CAAA,IAAI,GAAG,IAAID,SAAI,CAACA,SAAI,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,EAAEA,SAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;;;;"}