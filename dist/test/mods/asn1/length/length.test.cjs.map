{"version":3,"file":"length.test.cjs","sources":["../../../../../src/mods/asn1/length/length.test.ts"],"sourcesContent":["import { Binary } from \"libs/binary/binary.js\";\nimport { Length } from \"mods/asn1/length/length.js\";\nimport { Type } from \"mods/asn1/type/type.js\";\nimport { PEM } from \"mods/pem/pem.js\";\nimport { readFile } from \"node:fs/promises\";\nimport { relative, resolve } from \"node:path\";\nimport { test } from \"uvu\";\nimport assert from \"uvu/assert\";\n\ntest.before(async () => {\n  const directory = resolve(\"./dist/test/\")\n  const { pathname } = new URL(import.meta.url)\n  console.log(relative(directory, pathname))\n})\n\ntest(\"Read\", async () => {\n  const text = await readFile(\"./test/cert.pem\", \"utf8\")\n  const binary = new Binary(PEM.parse(text))\n\n  const type = Type.read(binary)\n  const length = Length.read(binary)\n  assert.is(length.value, 383)\n})\n\ntest.run()"],"names":["test","__awaiter","resolve","relative","readFile","binary","Binary","PEM","Type","length","Length"],"mappings":";;;;;;;;;;;;AASAA,QAAI,CAAC,MAAM,CAAC,MAAWC,eAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACrB,IAAA,MAAM,SAAS,GAAGC,iBAAO,CAAC,cAAc,CAAC,CAAA;AACzC,IAAA,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,GAAG,CAAC,2NAAe,CAAC,CAAA;IAC7C,OAAO,CAAC,GAAG,CAACC,kBAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAA;AAC5C,CAAC,CAAA,CAAC,CAAA;AAEFH,QAAI,CAAC,MAAM,EAAE,MAAWC,eAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;IACtB,MAAM,IAAI,GAAG,MAAMG,iBAAQ,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAA;AACtD,IAAA,MAAMC,QAAM,GAAG,IAAIC,aAAM,CAACC,OAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAA;IAE7BC,SAAI,CAAC,IAAI,CAACH,QAAM,EAAC;IAC9B,MAAMI,QAAM,GAAGC,aAAM,CAAC,IAAI,CAACL,QAAM,CAAC,CAAA;IAClC,MAAM,CAAC,EAAE,CAACI,QAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;AAC9B,CAAC,CAAA,CAAC,CAAA;AAEFT,QAAI,CAAC,GAAG,EAAE;;"}