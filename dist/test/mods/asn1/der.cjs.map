{"version":3,"file":"der.cjs","sources":["../../../../src/mods/asn1/der.ts"],"sourcesContent":["import { Binary } from \"libs/binary/binary.js\";\nimport { BitString } from \"mods/asn1/bit_string/bit_string.js\";\nimport { Constructed } from \"mods/asn1/constructed/constructed.js\";\nimport { Integer } from \"mods/asn1/integer/integer.js\";\nimport { ObjectIdentifier } from \"mods/asn1/object_identifier/object_identifier.js\";\nimport { OctetString } from \"mods/asn1/octet_string/octet_string.js\";\nimport { PrintableString } from \"mods/asn1/printable_string/printable_string.js\";\nimport { Sequence } from \"mods/asn1/sequence/sequence.js\";\nimport { Set } from \"mods/asn1/set/set.js\";\nimport { Type } from \"mods/asn1/type/type.js\";\nimport { ToStringable } from \"mods/asn1/types.js\";\nimport { Unknown } from \"mods/asn1/unknown/unknown.js\";\nimport { UTF8String } from \"mods/asn1/utf8_string/utf8_string.js\";\n\nexport namespace DER {\n\n  export function parse(binary: Binary): ToStringable {\n    const start = binary.offset\n    const type = Type.fromDER(binary)\n    binary.offset = start\n\n    if (type.equals(Integer.type))\n      return Integer.fromDER(binary)\n    if (type.equals(BitString.type))\n      return BitString.fromDER(binary)\n    if (type.equals(OctetString.type))\n      return OctetString.fromDER(binary)\n    if (type.equals(ObjectIdentifier.type))\n      return ObjectIdentifier.fromDER(binary)\n    if (type.equals(UTF8String.type))\n      return UTF8String.fromDER(binary)\n    if (type.equals(PrintableString.type))\n      return PrintableString.fromDER(binary)\n    if (type.equals(Sequence.type))\n      return Sequence.fromDER(binary, parse)\n    if (type.equals(Set.type))\n      return Set.fromDER(binary, parse)\n\n    if (type.clazz === Type.clazzes.UNIVERSAL)\n      return Unknown.fromDER(binary) // TODO throw\n\n    if (type.wrap)\n      return Constructed.fromDER(binary, parse)\n\n    return Unknown.fromDER(binary)\n  }\n\n}"],"names":["DER","type","Type","Integer","BitString","OctetString","ObjectIdentifier","UTF8String","PrintableString","Sequence","Set","Unknown","Constructed"],"mappings":";;;;;;;;;;;;;;AAciBA,qBAiChB;AAjCD,CAAA,UAAiB,GAAG,EAAA;IAElB,SAAgB,KAAK,CAAC,MAAc,EAAA;AAClC,QAAA,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAA;QAC3B,MAAMC,MAAI,GAAGC,SAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;AACjC,QAAA,MAAM,CAAC,MAAM,GAAG,KAAK,CAAA;AAErB,QAAA,IAAID,MAAI,CAAC,MAAM,CAACE,eAAO,CAAC,IAAI,CAAC;AAC3B,YAAA,OAAOA,eAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;AAChC,QAAA,IAAIF,MAAI,CAAC,MAAM,CAACG,oBAAS,CAAC,IAAI,CAAC;AAC7B,YAAA,OAAOA,oBAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;AAClC,QAAA,IAAIH,MAAI,CAAC,MAAM,CAACI,wBAAW,CAAC,IAAI,CAAC;AAC/B,YAAA,OAAOA,wBAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;AACpC,QAAA,IAAIJ,MAAI,CAAC,MAAM,CAACK,kCAAgB,CAAC,IAAI,CAAC;AACpC,YAAA,OAAOA,kCAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;AACzC,QAAA,IAAIL,MAAI,CAAC,MAAM,CAACM,sBAAU,CAAC,IAAI,CAAC;AAC9B,YAAA,OAAOA,sBAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;AACnC,QAAA,IAAIN,MAAI,CAAC,MAAM,CAACO,gCAAe,CAAC,IAAI,CAAC;AACnC,YAAA,OAAOA,gCAAe,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;AACxC,QAAA,IAAIP,MAAI,CAAC,MAAM,CAACQ,iBAAQ,CAAC,IAAI,CAAC;YAC5B,OAAOA,iBAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;AACxC,QAAA,IAAIR,MAAI,CAAC,MAAM,CAACS,OAAG,CAAC,IAAI,CAAC;YACvB,OAAOA,OAAG,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QAEnC,IAAIT,MAAI,CAAC,KAAK,KAAKC,SAAI,CAAC,OAAO,CAAC,SAAS;YACvC,OAAOS,eAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;QAEhC,IAAIV,MAAI,CAAC,IAAI;YACX,OAAOW,uBAAW,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;AAE3C,QAAA,OAAOD,eAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;KAC/B;AA7Be,IAAA,GAAA,CAAA,KAAK,QA6BpB,CAAA;AAEH,CAAC,EAjCgBX,WAAG,GAAHA,WAAG,KAAHA,WAAG,GAiCnB,EAAA,CAAA,CAAA;;"}