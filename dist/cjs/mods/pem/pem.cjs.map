{"version":3,"file":"pem.cjs","sources":["../../../../src/mods/pem/pem.ts"],"sourcesContent":["\nexport class PEM {\n  readonly class = PEM\n\n  static header = `-----BEGIN CERTIFICATE-----`\n  static footer = `-----END CERTIFICATE-----`\n\n  static parse(text: string) {\n    text = text.replaceAll(`\\n`, ``)\n\n    if (!text.startsWith(this.header))\n      throw new Error(`Missing PEM header`)\n    if (!text.endsWith(this.footer))\n      throw new Error(`Missing PEM footer`)\n\n    const body = text.slice(this.header.length, -this.footer.length)\n\n    return Buffer.from(body, \"base64\")\n  }\n\n  static stringify(buffer: Buffer) {\n    let result = `${this.header}\\n`\n    let body = buffer.toString(\"base64\")\n\n    while (body) {\n      result += `${body.slice(0, 64)}\\n`\n      body = body.slice(64)\n    }\n\n    result += `${this.footer}\\n`\n    return result\n  }\n}\n"],"names":[],"mappings":";;MACa,GAAG,CAAA;AAAhB,IAAA,WAAA,GAAA;QACW,IAAK,CAAA,KAAA,GAAG,GAAG,CAAA;KA8BrB;IAzBC,OAAO,KAAK,CAAC,IAAY,EAAA;QACvB,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAI,EAAA,CAAA,EAAE,CAAE,CAAA,CAAC,CAAA;QAEhC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;AAC/B,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,kBAAA,CAAoB,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;AAC7B,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,kBAAA,CAAoB,CAAC,CAAA;AAEvC,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;QAEhE,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;KACnC;IAED,OAAO,SAAS,CAAC,MAAc,EAAA;AAC7B,QAAA,IAAI,MAAM,GAAG,CAAA,EAAG,IAAI,CAAC,MAAM,IAAI,CAAA;QAC/B,IAAI,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAA;AAEpC,QAAA,OAAO,IAAI,EAAE;YACX,MAAM,IAAI,CAAG,EAAA,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA,EAAA,CAAI,CAAA;AAClC,YAAA,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;AACtB,SAAA;AAED,QAAA,MAAM,IAAI,CAAG,EAAA,IAAI,CAAC,MAAM,IAAI,CAAA;AAC5B,QAAA,OAAO,MAAM,CAAA;KACd;;AA3BM,GAAM,CAAA,MAAA,GAAG,6BAA6B,CAAA;AACtC,GAAM,CAAA,MAAA,GAAG,2BAA2B;;;;"}