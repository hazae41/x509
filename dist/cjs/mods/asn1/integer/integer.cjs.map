{"version":3,"file":"integer.cjs","sources":["../../../../../src/mods/asn1/integer/integer.ts"],"sourcesContent":["import { Binary } from \"libs/binary/binary.js\"\nimport { Bitset } from \"libs/bitset/bitset.js\"\nimport { Length } from \"mods/asn1/length/length.js\"\nimport { Type } from \"mods/asn1/type/type.js\"\n\nfunction read(value: number, negative: boolean) {\n  if (negative)\n    return new Bitset(value, 8).not().value\n  return value\n}\n\nexport class Integer {\n  readonly class = Integer\n\n  static type = new Type(Type.clazzes.universal, false, Type.tags.integer)\n\n  constructor(\n    readonly value: bigint\n  ) { }\n\n  static read(binary: Binary) {\n    const type = Type.read(binary)\n\n    if (!this.type.equals(type))\n      throw new Error(`Invalid type`)\n\n    const length = Length.read(binary)\n\n    let value = BigInt(0)\n\n    const first = binary.readUint8(true)\n    const bitset = new Bitset(first, 8)\n    const negative = bitset.get(7)\n\n    for (let i = 0; i < length.value; i++)\n      value += BigInt(read(binary.readUint8(), negative)) * (BigInt(256) ** BigInt(length.value - i - 1))\n\n    if (negative) value = ~value\n\n    return new this(value)\n  }\n}"],"names":["Bitset","type","Type","length","Length","bitset"],"mappings":";;;;;;AAKA,SAAS,IAAI,CAAC,KAAa,EAAE,QAAiB,EAAA;AAC5C,IAAA,IAAI,QAAQ;AACV,QAAA,OAAO,IAAIA,aAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,CAAA;AACzC,IAAA,OAAO,KAAK,CAAA;AACd,CAAC;MAEY,OAAO,CAAA;AAKlB,IAAA,WAAA,CACW,KAAa,EAAA;QAAb,IAAK,CAAA,KAAA,GAAL,KAAK,CAAQ;QALf,IAAK,CAAA,KAAA,GAAG,OAAO,CAAA;KAMnB;IAEL,OAAO,IAAI,CAAC,MAAc,EAAA;QACxB,MAAMC,MAAI,GAAGC,SAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAE9B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAACD,MAAI,CAAC;AACzB,YAAA,MAAM,IAAI,KAAK,CAAC,CAAA,YAAA,CAAc,CAAC,CAAA;QAEjC,MAAME,QAAM,GAAGC,aAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;AAElC,QAAA,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA;QAErB,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;QACpC,MAAMC,QAAM,GAAG,IAAIL,aAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;QACnC,MAAM,QAAQ,GAAGK,QAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;AAE9B,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAGF,QAAM,CAAC,KAAK,EAAE,CAAC,EAAE;AACnC,YAAA,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,QAAQ,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,MAAM,CAACA,QAAM,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;AAErG,QAAA,IAAI,QAAQ;YAAE,KAAK,GAAG,CAAC,KAAK,CAAA;AAE5B,QAAA,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,CAAA;KACvB;;AA1BM,OAAA,CAAA,IAAI,GAAG,IAAID,SAAI,CAACA,SAAI,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,EAAEA,SAAI,CAAC,IAAI,CAAC,OAAO,CAAC;;;;"}